apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileAndTargetVersion
    defaultConfig {
        applicationId "com.macyer.cloudreader"
        minSdkVersion rootProject.ext.minSdkVersionVersion
        targetSdkVersion rootProject.ext.compileAndTargetVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        /*有时model中的包和app引入冲突*/
        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
        }
        /*支持vector*/
        vectorDrawables.useSupportLibrary = true

        /*编译api降低到对应版本*/
        renderscriptTargetApi rootProject.ext.minSdkVersionVersion
        renderscriptSupportModeEnabled true
        /*so依赖*/
        ndk {
            abiFilters "armeabi"
        }
        /*编译版本*/
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        /*数据绑定*/
        dataBinding {
            enabled = true
        }
        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "tier", "channel"
    productFlavors {
        //开发测试专用渠道
        dev {
            dimension "tier"
            buildConfigField "boolean", "LOG_DEBUG", "true" //只在开发渠道中输出log
        }

        //基本渠道
        lvshou {
            dimension "tier"
            buildConfigField "boolean", "LOG_DEBUG", "false" //只在开发渠道中输出log
        }
        
        baiduchannel { dimension "channel" }
        _360safechannel { dimension "channel" }
        tencentchannel { dimension "channel" }
        productFlavors.all {
            /*flavor -> flavor.manifestPlaceholders = [CHANNEL_NAME: name]*/
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':library:utils')
    implementation project(':library:scan')
    implementation project(':library:sharesdk')

    //arouter
    api rootProject.ext.arouter
    annotationProcessor rootProject.ext.arouterCompiler
}
